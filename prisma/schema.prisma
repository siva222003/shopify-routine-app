// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

// Note that some adapters may set a maximum length for the String type by default, please ensure your strings are long
// enough when changing adapters.
// See https://www.prisma.io/docs/orm/reference/prisma-schema-reference#string for more information
datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model Session {
  session_id    String    @id @default(auto()) @map("_id") @db.ObjectId
  id            String    @unique
  shop          String
  state         String
  isOnline      Boolean   @default(false)
  scope         String?
  expires       DateTime?
  accessToken   String
  userId        BigInt?
  firstName     String?
  lastName      String?
  email         String?
  accountOwner  Boolean   @default(false)
  locale        String?
  collaborator  Boolean?  @default(false)
  emailVerified Boolean?  @default(false)
}

model Routine {
  id                String             @id @default(auto()) @map("_id") @db.ObjectId
  routineName       String
  category          String
  description       String
  duration          String
  channels          String[]
  draft             Boolean            @default(false)
  createdAt         DateTime           @default(now())
  updatedAt         DateTime           @updatedAt
  productReminders  ProductReminder[]
  activityReminders ActivityReminder[]
}

type ProductTimeSlots {
  mealType String
  mealTime String
  time     String
}

model ProductReminder {
  id           String             @id @default(auto()) @map("_id") @db.ObjectId
  product      Json
  productType  String
  dosageUnit   String
  dosageQty    String
  daily        Boolean
  customDays   String[]
  timeRange    String
  time         ProductTimeSlots[]
  durationQty  String
  durationUnit String
  routineId    String             @db.ObjectId
  routine      Routine            @relation(fields: [routineId], references: [id], onDelete: Cascade)
  createdAt    DateTime           @default(now())
  updatedAt    DateTime           @updatedAt
}

model ActivityReminder {
  id           String   @id @default(auto()) @map("_id") @db.ObjectId
  activityName String
  activityType String
  goal         String
  goalUnit     String
  daily        Boolean
  customDays   String[]
  durationQty  String
  durationUnit String
  time         String[]
  routine      Routine  @relation(fields: [routineId], references: [id], onDelete: Cascade)
  routineId    String   @db.ObjectId
}
